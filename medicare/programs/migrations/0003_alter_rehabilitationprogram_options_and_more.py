# Generated by Django 5.2.1 on 2025-06-13 20:38

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('exercises', '0002_initial'),
        ('patients', '0002_initial'),
        ('programs', '0002_initial'),
        ('staff', '0003_alter_user_options_user_account_locked_until_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='rehabilitationprogram',
            options={'ordering': ['-created_at'], 'permissions': [('can_assign_program', 'Can assign rehabilitation program'), ('can_modify_program', 'Can modify rehabilitation program')], 'verbose_name': 'Rehabilitation Program', 'verbose_name_plural': 'Rehabilitation Programs'},
        ),
        migrations.AddField(
            model_name='programexercise',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='programexercise',
            name='days_of_week',
            field=models.JSONField(blank=True, default=list, help_text='List of weekday numbers (0=Monday)'),
        ),
        migrations.AddField(
            model_name='programexercise',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='rehabilitationprogram',
            name='expected_outcomes',
            field=models.TextField(blank=True, null=True, verbose_name='Expected Outcomes'),
        ),
        migrations.AddField(
            model_name='rehabilitationprogram',
            name='goals',
            field=models.TextField(blank=True, null=True, verbose_name='Goals'),
        ),
        migrations.AddField(
            model_name='rehabilitationprogram',
            name='session_duration',
            field=models.PositiveIntegerField(default=60, help_text='Duration in minutes', verbose_name='Session Duration'),
        ),
        migrations.AddField(
            model_name='rehabilitationprogram',
            name='sessions_per_week',
            field=models.PositiveIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)], verbose_name='Sessions per Week'),
        ),
        migrations.AlterField(
            model_name='programday',
            name='day_number',
            field=models.PositiveIntegerField(verbose_name='Day Number'),
        ),
        migrations.AlterField(
            model_name='programday',
            name='notes',
            field=models.TextField(blank=True, null=True, verbose_name='Notes'),
        ),
        migrations.AlterField(
            model_name='programexercise',
            name='additional_instructions',
            field=models.TextField(blank=True, null=True, verbose_name='Additional Instructions'),
        ),
        migrations.AlterField(
            model_name='programexercise',
            name='duration',
            field=models.PositiveIntegerField(blank=True, help_text='Duration in seconds, if applicable', null=True, verbose_name='Duration (seconds)'),
        ),
        migrations.AlterField(
            model_name='programexercise',
            name='exercise',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='program_exercises', to='exercises.exercise'),
        ),
        migrations.AlterField(
            model_name='programexercise',
            name='order',
            field=models.PositiveIntegerField(default=0, verbose_name='Order'),
        ),
        migrations.AlterField(
            model_name='programexercise',
            name='repetitions',
            field=models.PositiveIntegerField(default=10, verbose_name='Repetitions'),
        ),
        migrations.AlterField(
            model_name='programexercise',
            name='rest_between_sets',
            field=models.PositiveIntegerField(default=60, help_text='Rest time in seconds', verbose_name='Rest between sets (seconds)'),
        ),
        migrations.AlterField(
            model_name='programexercise',
            name='sets',
            field=models.PositiveIntegerField(default=1, verbose_name='Sets'),
        ),
        migrations.AlterField(
            model_name='rehabilitationprogram',
            name='description',
            field=models.TextField(verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='rehabilitationprogram',
            name='end_date',
            field=models.DateField(blank=True, null=True, verbose_name='End Date'),
        ),
        migrations.AlterField(
            model_name='rehabilitationprogram',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rehab_programs', to='patients.patientprofile'),
        ),
        migrations.AlterField(
            model_name='rehabilitationprogram',
            name='start_date',
            field=models.DateField(verbose_name='Start Date'),
        ),
        migrations.AlterField(
            model_name='rehabilitationprogram',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('completed', 'Completed'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='draft', max_length=20),
        ),
        migrations.AlterField(
            model_name='rehabilitationprogram',
            name='title',
            field=models.CharField(max_length=255, verbose_name='Program Title'),
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_type', models.CharField(choices=[('consultation', 'Consultation'), ('therapy_session', 'Therapy Session'), ('assessment', 'Assessment'), ('follow_up', 'Follow-up')], default='therapy_session', max_length=20)),
                ('date', models.DateField(verbose_name='Date')),
                ('start_time', models.TimeField(verbose_name='Start Time')),
                ('end_time', models.TimeField(verbose_name='End Time')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='scheduled', max_length=20)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('reminder_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='staff.staffprofile')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='patients.patientprofile')),
                ('related_program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments', to='programs.rehabilitationprogram')),
            ],
            options={
                'verbose_name': 'Appointment',
                'verbose_name_plural': 'Appointments',
                'ordering': ['date', 'start_time'],
                'unique_together': {('doctor', 'date', 'start_time')},
            },
        ),
        migrations.CreateModel(
            name='ExercisePerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('performed_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('completed_sets', models.PositiveIntegerField(default=0)),
                ('completed_repetitions', models.PositiveIntegerField(default=0)),
                ('actual_duration_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('difficulty_rating', models.PositiveIntegerField(help_text='1=Very Easy, 5=Very Hard', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Difficulty Rating')),
                ('quality_rating', models.PositiveIntegerField(help_text='1=Poor, 5=Excellent', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Quality Rating')),
                ('pain_before', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Pain Before (0-10)')),
                ('pain_after', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Pain After (0-10)')),
                ('patient_notes', models.TextField(blank=True, null=True, verbose_name='Patient Notes')),
                ('completed_fully', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performances', to='exercises.exercise')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercise_performances', to='patients.patientprofile')),
                ('program_exercise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performances', to='programs.programexercise')),
            ],
            options={
                'verbose_name': 'Exercise Performance',
                'verbose_name_plural': 'Exercise Performances',
                'ordering': ['-performed_date'],
            },
        ),
        migrations.CreateModel(
            name='ProgressLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_type', models.CharField(choices=[('exercise', 'Exercise Performance'), ('pain_level', 'Pain Level'), ('mobility', 'Mobility Assessment'), ('general', 'General Progress'), ('appointment', 'Appointment Summary')], default='general', max_length=20)),
                ('log_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(verbose_name='Progress Notes')),
                ('pain_level', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Pain Level (0-10)')),
                ('mobility_score', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Mobility Score (%)')),
                ('media_files', models.JSONField(blank=True, default=list, help_text='List of media file paths')),
                ('recommendations', models.TextField(blank=True, null=True, verbose_name='Recommendations')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_logs', to='staff.staffprofile')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_logs', to='patients.patientprofile')),
                ('related_appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='progress_logs', to='programs.appointment')),
                ('related_exercise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='progress_logs', to='exercises.exercise')),
                ('related_program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='progress_logs', to='programs.rehabilitationprogram')),
            ],
            options={
                'verbose_name': 'Progress Log',
                'verbose_name_plural': 'Progress Logs',
                'ordering': ['-log_date'],
            },
        ),
    ]
